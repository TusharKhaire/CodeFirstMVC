@model TestDemoMVCCodeFirst.Models.ItemMaster
@{
    ViewBag.Title = "CreateItem";
}

<h2>Create New Item</h2>
@{
    //Layout = null;
    if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            alert(@Html.Raw(Json.Encode(ViewBag.Message)));
        </script>
    }
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
        <div class="form-horizontal container" id="div1">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(x => x.ItemCode)
            <div class="form-group">
                @Html.LabelFor(x => x.ItemName, "Item Name", htmlAttributes: new { @class = "control-lable col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(x => x.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.ItemName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ItemType, "Type Name", htmlAttributes: new { @class = "control-lable col-md-2" })
                <div class="col-md-10">
                    @* @Html.DropDownListFor(x => x.ItemType, new SelectList(Model.lst_itemType, "Value", "Text"), "", new { @class = "form-control" })*@
                    @Html.DropDownListFor(x => x.ItemType, Model.ItemTypeList, "--Select--", new { @class = "form-control" })
                    @*<input type="hidden" id="typeid" />*@
                    @Html.ValidationMessageFor(x => x.ItemType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Gst, "GST %", htmlAttributes: new { @class = "control-lable col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(x => x.Gst, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Gst, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" id="btn_Save" class="btn btn-default" onclick='return Validate();' />
                    <input type="submit" value="Modify" id="btn_Update" class="btn btn-default" onclick='return Validate();' />
                </div>

            </div>
            <input name="mySelect2" type="text" id="mySelect2">
        </div>
    <hr />
    <p>
        @Html.ActionLink("Back TO List", "Index")
    </p>

}

<script type="text/javascript">
    $("#mySelect2").select2({
        placeholder: "My Select 2",
        multiple: false,
        minimumInputLength: 1,
        ajax: {
            url: "/elements/all",
            dataType: 'json',
            quietMillis: 250,
            data: function (term, page) {
                return {
                    q: term,
                };
            },
            results: function (data, page) {
                return { results: data };
            },
            cache: true
        },
        formatResult: function (element) {
            return element.text + ' (' + element.id + ')';
        },
        formatSelection: function (element) {
            return element.text + ' (' + element.id + ')';
        },
        escapeMarkup: function (m) {
            return m;
        }
    });
    $("#mySelect2").select2('data', { id: "elementID", text: "Hello!" });
    //debugger;
    function Validate() {
        var itemname = $("#ItemName").val()
        var itemType = $("#ItemType").val()
        if (itemname == "") {
            alert(" Please Enter Item Name");
            return false;
        }
        else if (itemType == "") {
            alert(" Please Select Item Type");
            return false;
        }
        return true
    }
    $(document).ready(function () {
        $('#ItemType').select2({
        });
    });
</script>

















