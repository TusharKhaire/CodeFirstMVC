@model TestDemoMVCCodeFirst.ViewModel.SetMenu
@{
    ViewBag.Title = "setMenuMapping";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="container mt-4">
                <div class="card">
                    <div class="card-header">
                        <h3> Set Menu Access</h3>
                    </div>
                    <hr />
                    <div class="card-body">
                        <div class="form-group">
                            @Html.Label("Select User", new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(x => x.SelectedUserId, new SelectList(Model.UserList, "ID", "UserName"), "-- Select User --", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Select Menus", new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <div class="custom-border">
                                    @for (int i = 0; i < Model.MenuList.Count; i++)
                                    {
                                        <div>
                                            @Html.CheckBoxFor(m => m.MenuList[i].IsChecked)
                                            @Html.LabelFor(m => m.MenuList[i].IsChecked, Model.MenuList[i].Name)
                                            @Html.HiddenFor(m => m.MenuList[i].ID) @*// Include hidden field for ID if needed*@
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-10">
                                <input type="submit" class="btn btn-default" id="btnsubmit" value="Save" onclick="return Validation();" />
                                <input type="reset" class="btn btn-default" id="btnreset" value="Cancal" />
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

}


<style>
    .custom-border {
        height: 200px;
        width: 280px;
        overflow-y: auto;
        border: 1px solid #ccc;
        border-radius:4px; /* Adjust the border-radius for rounded corners */
        padding: 5px;
        margin-right: -15px; /* Adjust for scrollbar width */
    }

        .custom-border::-webkit-scrollbar {
            width: 12px;
        }

        .custom-border::-webkit-scrollbar-thumb {
            background-color: #888;
            border-radius: 4px;
        }
</style>